import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Collections;
import java.util.LinkedList;
import java.util.List;
import java.util.Queue;
import java.util.StringTokenizer;

public class BOJ_S5_1018_체스판다시칠하기 {
	static int N,M;
	static char[][] map;
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer token = new StringTokenizer(br.readLine());
		N = Integer.parseInt(token.nextToken());
		M = Integer.parseInt(token.nextToken());
		map = new char[N][M];
		for (int i = 0; i < N; i++) {
			map[i] = br.readLine().toCharArray();
		}
		
		int min = Integer.MAX_VALUE;
		
		for (int i = 0; i < N-7; i++) {
			for (int j = 0; j < M-7; j++) {
				// 칠하기
				int cnt = paint(i,j);
				min = (cnt<min)?cnt:min;

			}
		}
		System.out.println(min);
	}
	
	private static int paint(int n, int m) {
		char start = 'W';
		int cnt1 = 0;
		int cnt2 = 0;
		for (int i = n; i < n+8; i++) {
			for (int j = m; j < m+8; j++) {
				// 짝수행+짝수열==start
				if(i%2==0 && j%2==0) {
					if(map[i][j]!=start) cnt1++;
					else cnt2++;
				}
				// 짝수행+홀수열!=start
				else if(i%2==0 && j%2==1) {
					if(map[i][j]==start) cnt1++;
					else cnt2++;
				}
				// 홀수행+짝수열!=start
				else if(i%2==1 && j%2==0) {
					if(map[i][j]==start) cnt1++;
					else cnt2++;
				}
				// 홀수행+홀수열==start
				else if(i%2==1 && j%2==1) {
					if(map[i][j]!=start) cnt1++;
					else cnt2++;
				}
			}
		}
		return (cnt1<cnt2)?cnt1:cnt2;
	}
}
